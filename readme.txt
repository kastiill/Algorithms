Этот код определяет класс под названием Antiplagiat, принимающий два кода в строчном формате, 
text_1 и text_2, и возвращает оценку сходства между ними: это делается в функции similarity
с помощью функции levenshtein, котороая считает расстояние Левенштейна между двумя стркоами.

Функция делает это, сначала используя модуль ast (abstract syntax tree) для разбора входных
текстовых строк на соответствующие абстрактные синтаксические деревья. 
Затем он нормализует эти абстрактные синтаксические деревья, 
вызывая для них ast.dump, который генерирует строковое представление дерева.

Далее функция использует функцию levenshtein для вычисления расстояния между нормализованными 
абстрактными синтаксическими деревьями. Расстояние Левенштейна - это мера разницы между двумя строками, 
определяемая как минимальное количество односимвольных правок (вставок, удалений или замен), 
необходимых для преобразования одной строки в другую.

Наконец, функция similarity вычисляет сходство между входными текстовыми строками как 
1 - (distance / max(len(normalized_code1), len(normalized_code2))), 
где distance - расстояние Левенштейна между нормализованными абстрактными синтаксическими деревьями, 
а len(normalized_code1) и len(normalized_code2) - длины этих деревья. 
Результирующее значение будет плавающим между 0 и 1, 
где 0 представляет полностью непохожие строки, а 1 представляет идентичные строки.

Использовать скрипт Antiplagiat можно следующим образом.

1) Открываем файлы и записываем их в строки, например так:

with open(r"C:\Users\AdminV\Tinkoff_ML\files\auto.py", 'r') as f:
    contents1 = f.read()
    
with open(r"C:\Users\AdminV\Tinkoff_ML\plagiat1\auto.py", encoding="utf8") as l:
    contents2 = l.read()
    
    
2) Потом импортируем наш скрипт Antiplagiat, создаем экземпляр класса и считаем степень схожести:

from Antiplagiat import Antiplagiat

anti = Antiplagiat(contents1, contents2)
anti.similarity()


Также, хотелось бы привести несколько полученных резльтатов:

1) Для скриптов auto.py: вначале из папки files и plagiat1, потом из files и plagiat2.

0.997 и 0.997

2) Для cifar.py: вначале из папки files и plagiat1, потом из files и plagiat2.

0.570 и 0.479